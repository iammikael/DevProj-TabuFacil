generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aluno_turma {
  id_usuario Int
  id_turma   Int

  usuario usuario @relation(fields: [id_usuario], references: [id])
  turma   turma   @relation(fields: [id_turma], references: [id])

  @@id([id_usuario, id_turma])
}

model avisos {
  id_aviso  Int       @id @default(autoincrement())
  data_hora DateTime? @db.DateTime(0)
  titulo    String?   @db.VarChar(45)
  conteudo  Bytes?    @db.Blob
  id_turma  Int
  turma     turma     @relation(fields: [id_turma], references: [id])
}

model comentario {
  id                   Int       @id @default(autoincrement())
  data_hora            DateTime? @db.DateTime(0)
  comentario_aluno     Bytes?    @db.Blob
  comentario_professor String?   @db.VarChar(45)
  id_treinamento       Int

  treinamento          treinamento  @relation(fields: [id_treinamento], references: [id]) 
}

model treinamento {
  id             Int       @id @default(autoincrement())
  data_hora      DateTime? @db.DateTime(0)
  media_acertos  Float?    @db.Float
  avaliacao_prof        String?                 @db.VarChar(45)
  id_aluno       Int
  id_turma       Int
  id_professor   Int

  aluno          usuario   @relation("AlunoTreinamentos", fields: [id_aluno], references: [id])
  turma          turma     @relation("TurmaTreinamentos", fields: [id_turma], references: [id])

  comentarios           comentario[]           
  respostas_tabuada     treinamento_tabuada[]  
}

model treinamento_tabuada {
  id              Int  @id @default(autoincrement())
  primeiro_numero Int?
  segundo_numero  Int?
  resultado       Int?
  resposta_aluno  Int?
  id_treinamento  Int

  treinamento       treinamento @relation(fields: [id_treinamento], references: [id])
}

model turma {
  id           Int           @id @default(autoincrement())
  nome         String?       @db.VarChar(45)
  media_turma  Float?        @db.Float
  id_professor Int
  professor    usuario       @relation("UsuarioTurmas", fields: [id_professor], references: [id])
  aluno_turma  aluno_turma[]
  avisos        avisos[]     

  treinamentos   treinamento[] @relation("TurmaTreinamentos")
}

model usuario {
  id           Int                   @id @default(autoincrement())
  nome         String?               @db.VarChar(45)
  email        String?               @unique @db.VarChar(45)
  senha        String?               @db.VarChar(45)
  tipo_usuario usuario_tipo_usuario?
  turmas       turma[]               @relation("UsuarioTurmas")
  aluno_turma  aluno_turma[]

  treinamentos   treinamento[] @relation("AlunoTreinamentos")
}

enum usuario_tipo_usuario {
  Aluno
  Professor
  Administrador
}
